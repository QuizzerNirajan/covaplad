"""Changed address structure and add more metadata to registration table

Revision ID: bc5cd64da6ab
Revises: 7e9c53d0525d
Create Date: 2020-10-13 19:43:55.840800

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = "bc5cd64da6ab"
down_revision = "7e9c53d0525d"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("donation_venue_ibfk_1", "donation_venue", type_="foreignkey")
    op.drop_column("donation_venue", "city_id")

    op.drop_constraint("event_ibfk_1", "event", type_="foreignkey")
    op.drop_column("event", "city_id")

    op.drop_constraint("user_ibfk_1", "user", type_="foreignkey")
    op.drop_constraint("user_ibfk_2", "user", type_="foreignkey")

    # !Remove table only after removing all the contraints
    op.drop_table("city")

    # NOTE: Added by rabin.adk1@gmail.com
    op.drop_constraint("PRIMARY", "district", type_="primary")
    # ! Make the column a key before adding autoincrement
    op.create_primary_key(None, "district", ["id"])
    op.alter_column(
        "district",
        "id",
        existing_type=mysql.INTEGER(display_width=11),
        autoincrement=True,
    )

    op.create_table(
        "municipality",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("district_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["district_id"],
            ["district.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "district_id"),
    )

    op.create_table(
        "ward",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("number", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=True),
        sa.Column("municipality_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["municipality_id"],
            ["municipality.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("number", "municipality_id"),
    )

    op.add_column(
        "donation_registration",
        sa.Column("did_donation", sa.Boolean(), server_default="0", nullable=False),
    )
    op.add_column(
        "donation_registration", sa.Column("time", sa.DateTime(), nullable=False)
    )

    op.add_column(
        "donation_venue", sa.Column("address_id", sa.Integer(), nullable=False)
    )
    op.create_foreign_key(None, "donation_venue", "ward", ["address_id"], ["id"])

    op.add_column("event", sa.Column("address_id", sa.Integer(), nullable=False))
    op.create_foreign_key(None, "event", "ward", ["address_id"], ["id"])

    op.add_column(
        "event_registration", sa.Column("time", sa.DateTime(), nullable=False)
    )
    op.add_column(
        "event_registration",
        sa.Column("was_present", sa.Boolean(), server_default="0", nullable=False),
    )

    op.create_unique_constraint(None, "province", ["name", "country_id"])
    op.create_unique_constraint(None, "district", ["name", "province_id"])

    # NOTE: Added by rabin.adk1@gmail.com
    # !Delete the foreign key constraint before removing primary key
    op.drop_constraint("district_ibfk_1", "district", type_="foreignkey")
    # ! Make the column a key before adding autoincrement
    op.drop_constraint("PRIMARY", "province", type_="primary")
    op.create_primary_key(None, "province", ["id"])
    op.alter_column(
        "province",
        "id",
        existing_type=mysql.INTEGER(display_width=11),
        autoincrement=True,
    )
    op.create_foreign_key(None, "district", "province", ["province_id"], ["id"])

    op.create_foreign_key(None, "user", "ward", ["temporary_address_id"], ["id"])
    op.create_foreign_key(None, "user", "ward", ["permanent_address_id"], ["id"])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("user_ibfk_1", "user", type_="foreignkey")
    op.drop_constraint("user_ibfk_2", "user", type_="foreignkey")

    op.drop_constraint("donation_venue_ibfk_1", "donation_venue", type_="foreignkey")
    op.drop_column("donation_venue", "address_id")

    op.drop_constraint("event_ibfk_3", "event", type_="foreignkey")
    op.drop_column("event", "address_id")

    op.drop_table("ward")
    op.drop_table("municipality")

    # NOTE: Added by rabin.adk1@gmail.com
    # ! Remove autoincrement before removing as a key
    op.alter_column(
        "district",
        "id",
        existing_type=mysql.INTEGER(display_width=11),
        autoincrement=False,
    )
    op.drop_constraint("PRIMARY", "district", type_="primary")
    op.create_primary_key(None, "district", ["id", "province_id"])

    # !Delete the foreign key constraint before removing primary key
    op.drop_constraint("district_ibfk_1", "district", type_="foreignkey")
    # ! Remove autoincrement before removing as a key
    op.alter_column(
        "province",
        "id",
        existing_type=mysql.INTEGER(display_width=11),
        autoincrement=False,
    )
    op.drop_constraint("PRIMARY", "province", type_="primary")
    op.create_primary_key(None, "province", ["id", "country_id"])
    op.create_foreign_key(None, "district", "province", ["province_id"], ["id"])

    # !Create table first
    op.create_table(
        "city",
        sa.Column(
            "id", mysql.INTEGER(display_width=11), autoincrement=True, nullable=False
        ),
        sa.Column(
            "name",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=100),
            nullable=False,
        ),
        sa.Column(
            "district_id",
            mysql.INTEGER(display_width=11),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["district_id"], ["district.id"], name="city_ibfk_1"),
        sa.PrimaryKeyConstraint("id"),
        mysql_collate="utf8mb4_unicode_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )

    op.create_foreign_key(
        "user_ibfk_2", "user", "city", ["permanent_address_id"], ["id"]
    )
    op.create_foreign_key(
        "user_ibfk_1", "user", "city", ["temporary_address_id"], ["id"]
    )
    op.drop_column("event_registration", "was_present")
    op.drop_column("event_registration", "time")

    op.add_column(
        "event",
        sa.Column(
            "city_id",
            mysql.INTEGER(display_width=11),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.create_foreign_key("event_ibfk_1", "event", "city", ["city_id"], ["id"])

    op.add_column(
        "donation_venue",
        sa.Column(
            "city_id",
            mysql.INTEGER(display_width=11),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.create_foreign_key(
        "donation_venue_ibfk_1", "donation_venue", "city", ["city_id"], ["id"]
    )
    op.drop_column("donation_registration", "time")
    op.drop_column("donation_registration", "did_donation")

    op.drop_constraint("name", "province", type_="unique")
    op.drop_constraint("name", "district", type_="unique")
    # ### end Alembic commands ###
